x<- rnorm(100)
y<- rnorm(100)
plot(x,y)
x<- rnorm(100)
y<- rnorm(100)
plot(x,y)
x<- rnorm(100)
y<- rnorm(100)
plot(x,y)
x<- rnorm(100)
y<- rnorm(100)
plot(x,y)
git config --global --edit
git config --global --edit
library(gapminder)
library(gapminder)
gapminder
installed.packages("gapminder")
library(tidyverse)
library(gapminder)
gapminder
installed.packages(gapminder)
library(tidyverse)
library(gapminder)
gapminder
installed.packages("gapminder")
gapminder
installed.packages("gapminder")
library(tidyverse)
library(gapminder)
gapminder
install.packages("gapminder")
library(gapminder)
gapminder
head(gapminder)
tail(gapminder)
str(gapminder)
summary(gapminder)
plot(gapminder)
tidyverse
install.packages("tidyverse")
tidyverse
typeof(typeof(15.2))
summary(iris)
rows.names()
rows.names(iris)
min(iris)
MIN(iris)
MIN(Sepal.Length)
dim(iris)
iris$Sepal.Width
library(tidyverse)
library(gapminder)
filter(gapminder, country=="Canada")
filter(gapminder, country=="Canada", "Algeria")
filter(gapminder, country=="Canada", country== "Algeria")
filter(gapminder, country=="Canada", country== "Algeria")
filter(gapminder, country=="Canada" & "Algeria")
filter(gapminder, country=="Canada" & "Algeria")
filter(gapminder, country=="Canada" or "Algeria")
filter(gapminder, country=="Canada")
filter(gapminder, country=="Canada", "Algeria")
filter(gapminder, country=="Canada" & "Algeria")
filter(gapminder, country=="Canada" | country== "Algeria")
?filter()
filter(gapminder, country %in% c("Canada", "Algeria"),
year <= 1969, year >= 1960),
filter(gapminder, country %in% c("Canada", "Algeria"), year <= 1969, year >= 1960)
ilter(gapminder, country== "Canada" | country== "Algeria"), year <= 1969, year >= 1960)
filter(gapminder, country %in% c("Canada", "Algeria"), year <= 1969, year >= 1960)
filter(gapminder, country== "Canada" | country== "Algeria"), year <= 1969, year >= 1960)
filter(gapminder, country== "Canada" | country== "Algeria"), year <= 1969, year >= 1960)
filter(gapminder, country== "Canada" | country== "Algeria", year <= 1969, year >= 1960)
filter(gapminder,continent!= "Europe")
filter(gapminder, country== "Canada" | country== "Algeria" & year <= 1969, year >= 1960)
gapminder %>%
filter(continent== "Europe",
gdpPercap > 10000) %>%
select(c- gdpPercap)
filter(continent== "Europe",
gdpPercap > 10000) %>%
select(- gdpPercap)
gapminder %>%
filter(continent== "Europe",
gdpPercap > 10000) %>%
select(- gdpPercap)
arrange(gapminder, year)
arrange(gapminder, year, lifeExp)
arrange(gapminder, pop, lifeExp, desc)
arrange(gapminder, pop, desc(lifeExp))
gapminder %>%
arrange(year, desc(lifeExp)) %>%
rename(year, lifeExp, everything())
gapminder %>%
arrange(year, desc(lifeExp)) %>%
select(year, lifeExp, everything())
library(tidyverse)
library(gapminder)
head(gapminder)
tail(gapminder)
str(gapminder)
summary(gapminder)
plot(gapminder)
plot(continent)
gapminder$continent
gapminder$contries
gapminder$contries
gapminder$country
filter(gapminder, country== "Colombia")
plot(x=year, y=gdpPercap )
plot(x= "year", y="gdpPercap")
contries.plot(x="year", y="gdpPercap")
contries.plot(x="year", y="gdpPercap")
plot(gapminder, x= year, y= gdpPercap )
plot(gapminder, x= "year", y= "gdpPercap" )
library(gapminder)
library(tidyverse)
str(gapminder)
names(gapminder)
summary(gapminder)
summary(gapminder$gdpPercap)
typeof(gapminder)
typeof(gapminder$year)
typeof(gapminder$lifeExp)
a<- filter(gapminder, continent == "Americas")
select(filter(a, country== "Colombia"), country, gdpPercap, lifeExp, year)
my_colombia<- a %>%
filter(country== "Colombia", year >= 1987) %>%
select(country, year, lifeExp, gdpPercap, pop)
my_colombia
ggplot(my_colombia, aes(x=year, y=gdpPercap))+ geom_path()+
geom_bar(stat="identity", color="green", fill="steelblue")
inc<- function(x,y) {z<- x - y}
mutate(my_colombia, inc_lifeExp= inc(lifeExp, lifeExp[+1]), inc_gdpPercap= inc(gdpPercap, gdpPercap[+1]))
my_colombia %>%
arrange(year) %>%
ggplot(aes(pop, gdpPercap)) +
geom_point(color= "red") +
geom_path(color= "blue")
a %>%
group_by(country) %>%
ggplot(aes(year, gdpPercap)) + geom_smooth()+
geom_point(aes(color= country, size= pop ))
save.image("~/homework1/Untitled.RData")
